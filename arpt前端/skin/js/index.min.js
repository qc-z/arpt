/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

window.onload = function() {
    /*init webuploader*/
    var $btn = $("#ctlBtn"); //开始上传
    var sure_btn = $('#sure_btn');
    var get_code = $('#get_code');
    var number = $('#s_number');
    var code = $('#s_code');
    var uploader = WebUploader.create({
        // 选完文件后，是否自动上传。
        auto: false,
        // swf文件路径
        swf: '../css/Uploader.swf',
        // 文件接收服务端。
        server: 'http://arpt.legear.com:82/arpt110/getFace',
        // server: 'http://10.0.0.154:3002/testy',
        // 选择文件的按钮。可选。
        // 内部根据当前运行是创建，可能是input元素，也可能是flash.
        pick: '#filePicker',
        formData: {
            data: JSON.stringify({ "customerid": "arpt_youbang", "deviceid": "4C4C4544-0046-4B10-804C-C4C04F444332", "mobile": "13929562218" })
        },
        // 只允许选择图片文件。
        accept: {
            title: 'Images',
            extensions: 'gif,jpg,jpeg,bmp,png',
            mimeTypes: 'image/*'
        },
        method: 'POST'
    });
    // 当有文件添加进来的时候
    uploader.on('fileQueued', function(file) { // webuploader事件.当选择文件后，文件被加载到文件队列中，触发该事件。等效于 uploader.onFileueued = function(file){...} ，类似js的事件定义。
        // 创建缩略图
        // 如果为非图片文件，可以不用调用此方法。
        uploader.makeThumb(file, function(error, src) { //webuploader方法
            if (error) {
                alert('不能预览');
                return;
            }
            localStorage.setItem('pic', src);
            $('#imgs').attr('src', src);
        }, 400, 400);
    });
    // 文件上传过程中创建进度条实时显示。
    uploader.on('uploadProgress', function(file, percentage) {});

    // 文件上传成功，给item添加成功class, 用样式标记上传成功。
    uploader.on('uploadSuccess', function(file) {
        $('#s_complete').css({ 'display': 'block' });
    });

    // 文件上传失败，显示上传出错。
    uploader.on('uploadError', function(file) {
        alert('上传失败,请重试！');
        location.reload();
    });

    // 完成上传完了，成功或者失败，先删除进度条。
    uploader.on('uploadComplete', function(file) {});

    $btn.unbind('click').click(function() {
        $('#s_body').css({ 'visibility': 'hidden' });
        $('#s_mobile').css({ 'display': 'block', 'position': 'absolute', 'top': $('#s_body')[0].offsetTop });
        uploader.upload();
    });

    get_code.unbind('click').click(function(e) {
        if (number.val().length == 11) {
            if (get_code.hasClass('get_code')) {
                $.post('http://arpt.legear.com:82/arpt110/checkNumber', {
                    "customerid": "arpt_youbang",
                    "deviceid": "4C4C4544-0046-4B10-804C-C4C04F444332",
                    "mobile": number.val()
                }, function(res) {
                    if (res.code == 0) {
                        get_code.removeClass('get_code').addClass('get_code_dis');
                        var num = 60;
                        var timer = null;
                        get_code.text(num + '秒');
                        num--;
                        timer = setInterval(function() {
                            get_code.text(num + '秒');
                            num--;
                            if (num < 0) {
                                get_code.removeClass('get_code_dis').addClass('get_code');
                                get_code.text('获取验证码');
                                clearInterval(timer);
                            }
                        }, 1000);
                    }
                });
            }
        } else {
            alert('手机号码必须是11位！');
        }
    });

    sure_btn.unbind('click').click(function(e) {
        if (number.val().length == 11 && code.length > 0) {
            $.post('http://arpt.legear.com:82/arpt110/checkMobicode', {
                "customerid": "arpt_youbang",
                "deviceid": "4C4C4544-0046-4B10-804C-C4C04F444332",
                "mobile": number.val(),
                "moibcode": code.val()
            }, function(res) {
                console.log(res);
                number.val() == '';
                code.val() == '';
                // location.href = './result.html';
            })
        } else {
            alert('手机号码必须是11位！');
        }
    });

}


/***/ })
/******/ ]);
